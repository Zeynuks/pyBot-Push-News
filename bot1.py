# -*- coding: utf-8 -*-
import telebot
import random
from telebot import types
from bs4 import BeautifulSoup
import requests
import urllib.parse
import re
import os, time

TOKEN = '1816922959:AAEZ84tdBD4TeCN6yRox4lJzeS9qTtnbLbI'
bot = telebot.TeleBot(TOKEN)
likes = []
basket = []

@bot.message_handler(commands = ['start'])
def firstmessage(message):
    mark = types.ReplyKeyboardMarkup(resize_keyboard = True)
    go_button = types.KeyboardButton(text = 'üì∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–µ–Ω—Ç—É')
    catalog_button = types.KeyboardButton(text = 'üîù –¢–æ–ø 5 –∫–∞–Ω–∞–ª–æ–≤')
    interesting_button = types.KeyboardButton(text = 'üçâ –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
    new_post = types.KeyboardButton(text = 'üÜï –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏')
    basket = types.KeyboardButton(text = '‚ù§Ô∏è –ü–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è')
    mark.row(go_button, catalog_button).row(interesting_button, new_post).add(basket)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –ø–∞–Ω–µ–ª–∏ —Å–Ω–∏–∑—É üëá: \n\nüì∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–µ–Ω—Ç—É - –ø–æ–∫–∞–∑ 5 –ª—é–±—ã—Ö —Å—Ç–∞—Ç–µ–π —Å —Ä–∞–∑–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏–µ–Ω–∏—è –ø–æ —Ç–µ–º–∞–º \n\nüîù –¢–æ–ø 5 –∫–∞–Ω–∞–ª–æ–≤ - –ø–æ–∫–∞–∑ 5 —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —Ç–µ–º–∞–º (–≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ '—Ç–æ–ø' –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ —Å—Ä–µ–¥–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤, –∞ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö) \n\nüçâ –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º–∞—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π \n\nüÜï –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ - –ø–æ–∫–∞–∑ –Ω–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ \n\n‚ù§Ô∏è –ü–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è - –±–∏–±–∏–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –≤–∞–º —Å—Ç–∞—Ç–µ–π", reply_markup = mark)

@bot.message_handler(content_types = ['text'])
def answer(message):
    if message.text == 'üì∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–µ–Ω—Ç—É':
        list_book = ['https://t.me/s/history_0o/', 'https://t.me/s/National_Geograph1c/', 'https://t.me/s/slifcloud/',
        'https://t.me/s/TriviaGames/', 'https://t.me/s/PopularNauka/']
        #file = open('channels.txt', 'r')
        true_list_book = []
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: 0/5')
        global likes
        likes = []
        for i in 1, 2, 3, 4, 5:
            new_book = random.choice(list_book)
            list_book.remove(new_book)
            true_list_book.append(new_book)
        for j in 0, 1, 2, 3,:
            url = true_list_book[j]
            page = requests.get(url)
            soup = BeautifulSoup(page.text, "lxml")
            string_1 = soup.find_all('div', class_='tgme_widget_message_wrap js-widget_message_wrap')[-1]
            string_2 = string_1.find('div', class_='tgme_widget_message js-widget_message')
            end = string_2.get('data-post')
            ster = end.split('/')
            def five_articles(): 
                max_book = random.randint(1, int(ster[1]))
                split = true_list_book[j].split('s/', 1)
                true_book = split[0] + split[1] + str(max_book)
                r = requests.get(true_book)
                cumpot = re.search('checkActionsPosition()', r.text)
                if cumpot == None:
                    return five_articles()
                else:
                    global likes
                    likes.append(true_book)
                    complete = types.InlineKeyboardMarkup()
                    open_book = types.InlineKeyboardButton(text = '–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—å—é', url = true_book)
                    like = types.InlineKeyboardButton(text = '–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚ù§Ô∏è', callback_data = 'like' + str(j))
                    complete.add(open_book, like)
                    bot.send_message(message.chat.id, '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é: ' + true_book + 
                        '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ' + split[0] + split[1],  reply_markup = complete)
                    bot.edit_message_text(chat_id=message.chat.id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: " + str(j+1) + "/5".format(message.text), message_id=message.message_id + 1)
                    if j+1 == 5:
                        bot.edit_message_text(chat_id=message.chat.id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: 5/5 ‚úÖ".format(message.text), message_id=message.message_id + 1)
            five_articles()
    elif message.text == 'üîù –¢–æ–ø 5 –∫–∞–Ω–∞–ª–æ–≤':
        list_channel = ['–ò—Ç—Å–æ—Ä–∏—è - https://t.me/history_0o', 'National Geographic - https://t.me/National_Geograph1c', 
        '–í—Å–µ–ª–µ–Ω–Ω–∞—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π - https://t.me/vseapps', '–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º - –∑–∞–≥–∞–¥–∫–∏ –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã - https://t.me/TriviaGames', 
        '–ö–æ—Ç–û–±–ª–∞–∫–æ - https://t.me/slifcloud']
        true_list_channel = []
        for i in 1,2,3,4,5:
            new_channel = random.choice(list_channel)
            list_channel.remove(new_channel)
            true_list_channel.append(new_channel)
        for element in true_list_channel:
            bot.send_message(message.chat.id, element)
    elif message.text == 'üçâ –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é':
        category = types.InlineKeyboardMarkup()
        history_post = types.InlineKeyboardButton(text = 'üë®‚Äçüé® –ò—Å—Ç–æ—Ä–∏—è', callback_data = 'history')
        geography_post = types.InlineKeyboardButton(text = 'üåé –ì–µ–æ–≥—Ä–∞—Ñ–∏—è', callback_data = 'geography')
        cracker_post = types.InlineKeyboardButton(text = 'üç™ –ü–æ–ª–µ–∑–Ω–æ–µ', callback_data = 'cracker')
        poll_post = types.InlineKeyboardButton(text = 'üé± –í–∏–∫—Ç–æ—Ä–∏–Ω—ã', callback_data = 'poll')
        category.row(history_post, geography_post).add(cracker_post, poll_post)
        bot.send_message(message.chat.id, 'üçí –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup = category)
    elif message.text == 'üÜï –ù–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏':
        list_book = ['https://t.me/s/history_0o/', 'https://t.me/s/National_Geograph1c/', 'https://t.me/s/vseapps/',
        'https://t.me/s/TriviaGames/', 'https://t.me/s/slifcloud/', 'https://t.me/s/PopularNauka/']
        true_list_book = []
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: 0/5')
        for i in 1, 2, 3, 4, 5:
            new_book = random.choice(list_book)
            list_book.remove(new_book)
            true_list_book.append(new_book)
        for j in 0, 1, 2, 3, 4:
            url = true_list_book[j]
            page = requests.get(url)
            soup = BeautifulSoup(page.text, "lxml")
            string_1 = soup.find_all('div', class_='tgme_widget_message_wrap js-widget_message_wrap')[-1]
            string_2 = string_1.find('div', class_='tgme_widget_message js-widget_message')
            end = string_2.get('data-post')
            try:
                complete = types.InlineKeyboardMarkup()
                open_book = types.InlineKeyboardButton(text = '–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—å—é', url = 'https://t.me/' + end)
                complete.add(open_book)
                bot.send_message(message.chat.id, '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é: https://t.me/' + end + 
                    '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ' + true_list_book[j],  reply_markup = complete)
                bot.edit_message_text(chat_id=message.chat.id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: " + str(j+1) + "/5".format(message.text), message_id=message.message_id + 1)
                if j+1 == 5:
                    bot.edit_message_text(chat_id=message.chat.id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: 5/5 ‚úÖ".format(message.text), message_id=message.message_id + 1)
            except UnicodeEncodeError:
                return five_articles()
    elif message.text == '‚ù§Ô∏è –ü–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è':
        forward = '‚ù§Ô∏è –ü–æ–Ω—Ä–∞–≤–∏–≤—à–µ–µ—Å—è:\n'
        if len(basket) == 0:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è —Å—Ç–∞—Ç–µ–π')
        else:
            for i in range(len(basket)):
                forward = forward + str(i + 1) + '. ' + str(basket[i]) + '\n'
            bot.send_message(message.chat.id, str(forward))

@bot.callback_query_handler(func = lambda call: True)
def call_answer(call):
    def selection_articles(list_book):
        true_list_book = []
        for i in 1, 2, 3, 4, 5:
            new_book = random.choice(list_book)
            true_list_book.append(new_book)
        for j in 0, 1, 2, 3, 4:
            url = true_list_book[j]
            page = requests.get(url)
            soup = BeautifulSoup(page.text, "lxml")
            string_1 = soup.find_all('div', class_='tgme_widget_message_wrap js-widget_message_wrap')[-1]
            string_2 = string_1.find('div', class_='tgme_widget_message js-widget_message')
            end = string_2.get('data-post')
            ster = end.split('/')
            def five_articles(): 
                max_book = random.randint(1, int(ster[1]))
                split = true_list_book[j].split('s/', 1)
                true_book = split[0] + split[1] + str(max_book)
                r = requests.get(true_book)
                cumpot = re.search('checkActionsPosition()', r.text)
                if cumpot == None:
                    return five_articles()
                else:
                    complete = types.InlineKeyboardMarkup()
                    open_book = types.InlineKeyboardButton(text = '–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—å—é', url = true_book)
                    complete.add(open_book)
                    bot.send_message(call.message.chat.id, '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é: ' + true_book + 
                        '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ' + split[0] + split[1],  reply_markup = complete)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: " + str(j+1) + "/5")
                    if j+1 == 5:
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: 5/5 ‚úÖ")
            five_articles()
    if call.data == 'history':
        list_book = ['https://t.me/s/history_0o/']
        selection_articles(list_book)
    elif call.data == 'geography':
        list_book = ['https://t.me/s/National_Geograph1c/']
        true_list_book = []
        selection_articles(list_book)
    elif call.data == 'cracker':
        list_book = ['https://t.me/s/vseapps/', 'https://t.me/s/slifcloud/']
        selection_articles(list_book)
    elif call.data == 'poll':
        list_book = ['https://t.me/s/TriviaGames/']
        selection_articles(list_book)
    elif call.data == 'like0':
        basket.append(likes[0])
        bot.answer_callback_query(callback_query_id=call.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')
    elif call.data == 'like1':
        basket.append(likes[1])
        bot.answer_callback_query(callback_query_id=call.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')
    elif call.data == 'like2':
        basket.append(likes[2])
        bot.answer_callback_query(callback_query_id=call.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')
    elif call.data == 'like3':
        basket.append(likes[3])
        bot.answer_callback_query(callback_query_id=call.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')
    elif call.data == 'like4':
        basket.append(likes[4])
        bot.answer_callback_query(callback_query_id=call.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')

bot.polling(none_stop = True)
